document.addEventListener("DOMContentLoaded", async () => {
    const dormitoryId = new URLSearchParams(window.location.search).get("id");

    await loadDropdowns();

    if (dormitoryId) {
        document.getElementById("formTitle").innerText = "üñãÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏≠‡∏û‡∏±‡∏Å";
        loadDormitoryData(dormitoryId);
    }

    document.getElementById("dormitoryForm").addEventListener("submit", async (e) => {
        e.preventDefault();
        dormitoryId ? updateDormitory(dormitoryId) : addDormitory();
    });
});

// üü¢ ‡πÇ‡∏´‡∏•‡∏î Dropdown ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó, ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà ‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡πà‡∏á‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å
async function loadDropdowns() {
    const endpoints = [
        { url: "http://localhost:3000/api/dormitory_types", id: "dormType", valueField: "Dormitory_Type_ID", textField: "Dormitory_Type" },
        { url: "http://localhost:3000/api/dormitory_categories", id: "category", valueField: "Category_ID", textField: "Category_Name" },
        { url: "http://localhost:3000/facilities", id: "facilityList", isCheckbox: true }
    ];

    for (const endpoint of endpoints) {
        try {
            const res = await fetch(endpoint.url);
            const data = await res.json();

            if (endpoint.isCheckbox) {
                const container = document.getElementById(endpoint.id);
                data.forEach(facility => {
                    container.innerHTML += `
                        <label>
                            <input type="checkbox" name="facility" value="${facility.Facility_ID}"> ${facility.Facility_Name}
                        </label><br>
                    `;
                });
            } else {
                const select = document.getElementById(endpoint.id);
                select.innerHTML = `<option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å --</option>`;
                data.forEach(item => {
                    select.innerHTML += `<option value="${item[endpoint.valueField]}">${item[endpoint.textField]}</option>`;
                });
            }
        } catch (error) {
            console.error(`‚ùå Error loading ${endpoint.id}:`, error);
        }
    }
}

// üü¢ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏≠‡∏û‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
async function loadDormitoryData(id) {
    try {
        const res = await fetch(`http://localhost:3000/api/dormitories/${id}`);
        if (!res.ok) throw new Error("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏≠‡∏û‡∏±‡∏Å");

        const dorm = await res.json();
        document.getElementById("dormName").value = dorm.Dormitory_Name;
        document.getElementById("description").value = dorm.Description;
        document.getElementById("latitude").value = dorm.Latitude;
        document.getElementById("longitude").value = dorm.Longitude;
        document.getElementById("contactNumber").value = dorm.Contact_Number;
        document.getElementById("email").value = dorm.Dormitory_Email;
        document.getElementById("dormType").value = dorm.Dormitory_Type_ID;
        document.getElementById("category").value = dorm.Category_ID;

        if (dorm.Dormitory_Photo) {
            document.getElementById("currentPhoto").innerHTML = `
                <img src="http://localhost:3000/uploads/${dorm.Dormitory_Photo}" width="150" style="border-radius: 10px;">
            `;
        }

        // ‚úÖ ‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏¥‡πà‡∏á‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å
        const selectedFacilities = dorm.Facilities.map(facility => facility.Facility_ID);
        document.querySelectorAll('input[name="facility"]').forEach(checkbox => {
            if (selectedFacilities.includes(parseInt(checkbox.value))) {
                checkbox.checked = true;
            }
        });

    } catch (error) {
        console.error("‚ùå Error loading dormitory data:", error);
        alert("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏≠‡∏û‡∏±‡∏Å");
    }
}

// üü¢ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏≠‡∏û‡∏±‡∏Å‡πÉ‡∏´‡∏°‡πà
async function addDormitory() {
    const formData = createFormData();
    try {
        const res = await fetch("http://localhost:3000/api/dormitories", {
            method: "POST",
            body: formData
        });

        if (!res.ok) throw new Error("‚ùå ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß");

        alert("‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
        window.location.href = "dormitory_list.html";
    } catch (error) {
        console.error("‚ùå Error adding dormitory:", error);
        alert(`‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${error.message}`);
    }
}

// üü¢ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡∏≠‡∏û‡∏±‡∏Å
async function updateDormitory(id) {
    const formData = createFormData();
    formData.append("Dormitory_ID", id);

    try {
        const res = await fetch(`http://localhost:3000/api/dormitories/${id}`, {
            method: "PUT",
            body: formData
        });

        if (!res.ok) throw new Error("‚ùå ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß");

        alert("‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
        window.location.href = "dashboard.html";
    } catch (error) {
        console.error("‚ùå Error updating dormitory:", error);
        alert(`‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${error.message}`);
    }
}

// üü¢ ‡∏™‡∏£‡πâ‡∏≤‡∏á FormData ‡∏à‡∏≤‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏°
// üü¢ ‡∏™‡∏£‡πâ‡∏≤‡∏á FormData ‡∏à‡∏≤‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏°
function createFormData() {
    const formData = new FormData();
    formData.append("Dormitory_Name", document.getElementById("dormName").value);
    formData.append("Description", document.getElementById("description").value);
    formData.append("Latitude", document.getElementById("latitude").value);
    formData.append("Longitude", document.getElementById("longitude").value);
    formData.append("Contact_Number", document.getElementById("contactNumber").value);
    formData.append("Dormitory_Email", document.getElementById("email").value);
    formData.append("Dormitory_Type_ID", document.getElementById("dormType").value);
    formData.append("Category_ID", document.getElementById("category").value);

    // ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤ User_ID ‡πÅ‡∏•‡∏∞ Owner_ID ‡∏à‡∏≤‡∏Å sessionStorage (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏£‡∏∞‡∏ö‡∏ö login)
    const userId = sessionStorage.getItem("User_ID") || "4"; // ‡πÉ‡∏ä‡πâ 4 ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ session
    formData.append("User_ID", userId);
    formData.append("Owner_ID", userId);

    // ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≤‡∏Å input checkbox (‡∏™‡∏¥‡πà‡∏á‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å)
    const facilities = Array.from(document.querySelectorAll('input[name="facility"]:checked'))
        .map(facility => parseInt(facility.value)); // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
    formData.append("Facilities", JSON.stringify(facilities)); // ‡∏™‡πà‡∏á‡πÑ‡∏õ‡πÄ‡∏õ‡πá‡∏ô JSON

    // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÉ‡∏´‡∏°‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const photo = document.getElementById("dormPhoto").files[0];
    if (photo) {
        formData.append("Dormitory_Photo", photo);
    }

    return formData;
}
